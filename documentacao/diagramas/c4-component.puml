@startuml c4-component
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

UpdateBoundaryStyle($bgColor="gold", $fontColor="brown", $borderColor="brown")
UpdateSystemBoundaryStyle($bgColor="gold", $fontColor="white", $borderColor="white")

System(cliente, "Cliente externo")

Component(dominio, "Domínio", "Java package", "Parte invariante")
Component(servicos, "Casos de Uso", "Java package", "Implementação das funções")
Component(conversores, "Conversores", "ModelMapper", "Mapper DTO/Domínio")
Component(rest, "REST API", "Spring Boot", "Recebe requisições")

Component(repos, "Repositórios", "Spring Data", "Implementação")
Rel(servicos, dominio, "usa", "importa")
Rel(repos, dominio, "usa", "importa")
Rel(conversores, dominio, "usa", "importa")
Rel(rest,conversores, "usa")


ContainerDb(db, "Armazenamento", "NoSQL", "Análises")

Rel(repos, db, "usa")

AddBoundaryTag("v1", $bgColor="lightgreen", $fontColor="green", $borderColor="green")
AddElementTag("v1", $bgColor="lightred", $fontColor="red", $borderColor="red")

AddBoundaryTag("v2", $bgColor="LightGray", $fontColor="green", $borderColor="green")
AddElementTag("v2", $bgColor="LightBlue", $fontColor="red", $borderColor="red")

Rel_L(rest, servicos, "usa", "")
Rel(cliente, rest, "usa", "HTTPS")

Container_Boundary(loader, "Repositório de resoluções") {
    Component(comp9, "Resolução X", "Implementação de X", "Carregado dinamicamente")
    Component(comp10, "Resolução Y", "Implementação de Y", "Carregado dinamicamente")
}

Component(comp11, "Loader", "Carrega resolução", "Disponibiliza resolução\nem tempo de execução")

Rel_U(comp9, dominio, "Depende de", "")
Rel_U(comp10, dominio, "Depende de", "")
Rel_D(servicos, comp11, "carrega", "")

Rel(comp11, comp9, "Carrega")
Rel(comp11, dominio, "Depende de")


@enduml
